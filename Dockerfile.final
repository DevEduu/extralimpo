# Use a imagem Alpine do Nginx que é mais leve e segura
FROM nginx:stable-alpine

# Adicione metadados ao container
LABEL maintainer="Extra Limpo <contato@extralimpo.com.br>"
LABEL version="1.0"
LABEL description="Site da Extra Limpo - Limpeza de estofados em Aracaju"

# Configure o fuso horário
ENV TZ=America/Recife

# Criar configuração otimizada do Nginx
RUN echo 'server { \
    listen 80; \
    server_name _; \
    root /usr/share/nginx/html; \
    index index.html; \
    \
    # Compressão gzip \
    gzip on; \
    gzip_vary on; \
    gzip_min_length 1024; \
    gzip_proxied expired no-cache no-store private auth; \
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml; \
    \
    # Cache para arquivos estáticos \
    location ~* \\.(jpg|jpeg|png|webp|gif|ico|svg)$ { \
        expires 30d; \
        add_header Cache-Control "public, no-transform"; \
        access_log off; \
    } \
    \
    location ~* \\.(css|js)$ { \
        expires 7d; \
        add_header Cache-Control "public, no-transform"; \
        access_log off; \
    } \
    \
    # Configuração principal \
    location / { \
        try_files $uri $uri/ /index.html; \
        \
        # Headers de segurança \
        add_header X-Frame-Options "SAMEORIGIN" always; \
        add_header X-XSS-Protection "1; mode=block" always; \
        add_header X-Content-Type-Options "nosniff" always; \
        add_header Referrer-Policy "strict-origin-when-cross-origin" always; \
        add_header Permissions-Policy "camera=(), microphone=(), geolocation=()"; \
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always; \
    } \
    \
    # Endpoint para health-check \
    location /health { \
        access_log off; \
        add_header Content-Type text/plain; \
        return 200 "OK"; \
    } \
    \
    # Endpoint para monitoramento \
    location /stub_status { \
        stub_status on; \
        access_log off; \
        allow 127.0.0.1; \
        allow 172.16.0.0/12; \
        deny all; \
    } \
    \
    # Impedir acesso a arquivos ocultos \
    location ~ /\\.(?!well-known) { \
        deny all; \
        access_log off; \
        log_not_found off; \
    } \
}' > /etc/nginx/conf.d/default.conf

# Remove a configuração padrão desnecessária
RUN rm -f /etc/nginx/conf.d/default.conf.default

# Crie diretórios necessários com permissões adequadas
RUN mkdir -p /usr/share/nginx/html/assets && \
    mkdir -p /var/cache/nginx && \
    mkdir -p /var/log/nginx && \
    chown -R nginx:nginx /var/cache/nginx && \
    chown -R nginx:nginx /var/log/nginx && \
    chown -R nginx:nginx /usr/share/nginx/html && \
    chmod -R 755 /var/cache/nginx && \
    chmod -R 755 /var/log/nginx && \
    chmod -R 755 /usr/share/nginx/html

# Diretório de trabalho
WORKDIR /usr/share/nginx/html

# Copie o site para o container
COPY index.html .
COPY assets/ assets/

# Exponha a porta 80
EXPOSE 80

# Comando para iniciar o Nginx
CMD ["nginx", "-g", "daemon off;"] 